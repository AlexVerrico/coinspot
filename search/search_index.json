{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Coinspot API Wrapper in Python Documentation is a work in progress - if there's something that you think is missing, please open an issue and let me know: https://github.com/AlexVerrico/coinspot/issues/new This documentation is not designed to replace the Coinspot docs, but rather to show you how each of the raw API functions can be accessed through this library. As such, I suggest that you read the Coinspot API Docs first. Installation pip install coinspot Setup To use parts of this library, you may need an API Token. You can obtain one by following the official Coinspot instructions at the top of this page Usage Start here: API V2 General Concepts","title":"Usage"},{"location":"#coinspot-api-wrapper-in-python","text":"","title":"Coinspot API Wrapper in Python"},{"location":"#documentation-is-a-work-in-progress-if-theres-something-that-you-think-is-missing-please-open-an-issue-and-let-me-know-httpsgithubcomalexverricocoinspotissuesnew","text":"This documentation is not designed to replace the Coinspot docs, but rather to show you how each of the raw API functions can be accessed through this library. As such, I suggest that you read the Coinspot API Docs first.","title":"Documentation is a work in progress - if there's something that you think is missing, please open an issue and let me know: https://github.com/AlexVerrico/coinspot/issues/new"},{"location":"#installation","text":"pip install coinspot","title":"Installation"},{"location":"#setup","text":"To use parts of this library, you may need an API Token. You can obtain one by following the official Coinspot instructions at the top of this page","title":"Setup"},{"location":"#usage","text":"Start here: API V2 General Concepts","title":"Usage"},{"location":"api/v2/full_access_api/","text":"src.coinspot.FullAccessAPIV2 __init__ ( api_key , api_secret ) Wrapper for the CoinSpot FullAccess API V2 Parameters: Name Type Description Default api_key str your CoinSpot FullAccess API Key required api_secret str the Secret associated with the provided API key required status ( nonce = None ) Return the status of the CoinSpot API. Parameters: Name Type Description Default nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict {'status': 'ok'} coin_deposit_address ( coin , nonce = None ) Return the deposit address for {coin} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { 'status':'ok', 'message':'ok', 'networks': [ {'name': 'BEP2', 'network': 'BNB', 'address': 'xxxxxxxxxxxxxxxxxxxxxxxxxxx', 'memo': '123456'}, {'name': 'ERC20', 'network': 'ETH', 'address': 'xxxxxxxxxxxxxxxxxxxxxxxxxxx', 'memo': ''} ] } quote_buy_now ( coin , amount , amount_type , nonce = None ) Return a quote to buy {amount} of {coin}. Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount to buy of {coin} required amount_type str \"coin\" or \"aud\" - whether {amount} is coin amount or AUD amount required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict {'status': 'ok', 'message': 'ok', 'rate': 1234} quote_sell_now ( coin , amount , amount_type , nonce = None ) Return a quote to sell {amount} of {coins} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount to buy of {coin} required amount_type str \"coin\" or \"aud\" - whether {amount} is coin amount or AUD amount required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict {'status': 'ok', 'message': 'ok', 'rate': 1234} quote_swap_now ( coin_to_sell , coin_to_buy , amount , nonce = None ) Return a quote to swap {amount} of {coin_to_sell} for {coin_to_buy} Parameters: Name Type Description Default coin_to_sell str Coin short name, eg. BTC, ETH, LTC required coin_to_buy str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin_to_sell} to sell required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict {'status': 'ok', 'message': 'ok', 'rate': 1234} market_buy_order ( coin , amount , rate , market_type = 'AUD' , nonce = None ) Place a market buy order for {amount} of {coin} at {rate} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin} to buy, max precision 8 decimal places required rate float Rate in market currency (e.g. AUD or USDT) you are willing to pay, max precision 8 decimal places required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' 'AUD' nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"coin\":\"BTC\", \"market\": \"BTC/AUD\", \"amount\":1.234 \"rate\":123.344 \"id\":\"12345678901234567890\" } buy_now_order ( coin , amount , amount_type , rate = None , threshold = None , direction = 'UP' , nonce = None ) Place a buy now order for {amount} of {coin}. {amount} can be AUD or {coin}, determined by {amount_type} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin} to buy, max precision 8 decimal places required amount_type str \"coin\" or \"aud\" - whether {amount} is coin amount or AUD amount required rate float (optional) rate in AUD received from using quote_buy_now or otherwise None threshold float (optional) 0 to 1000 - buy request will terminate if not within percentage threshold for current rate to vary from submitted rate, max precision for percentage is 8 decimal places None direction str (optional) UP, DOWN, or BOTH - direction the price has moved for the percentage threshold to apply 'UP' nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"coin\":\"BTC\", \"amount\":1.234, \"market\":\"BTC/AUD\", \"total\": 10.234 } market_sell_order ( coin , amount , rate , market_type = 'AUD' , nonce = None ) Place a market sell order for {amount} of {coin} at {rate} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin} to sell, max precision 8 decimal places required rate float rate in AUD you are willing to sell for, max precision 8 decimal places required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' 'AUD' nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"coin\":\"BTC\", \"market\": \"BTC/AUD\", \"amount\":1.234, \"rate\":123.344, \"id\":\"12345678901234567890\" } sell_now_order ( coin , amount , amount_type , rate = None , threshold = None , direction = 'DOWN' , nonce = None ) Place a sell now order for {amount} of {coin}. {amount} can be AUD or {coin}, determined by {amount_type} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin} to buy, max precision 8 decimal places required amount_type str \"coin\" or \"aud\" - whether {amount} is coin amount or AUD amount required rate float (optional) rate in AUD received from using Sell Now Quote or otherwise None threshold float (optional) 0 to 1000 - sell request will terminate if not within percentage threshold for current rate to vary from submitted rate, max precision for percentage is 8 decimal places None direction str (optional) UP, DOWN, or BOTH - direction the price has moved for the percentage threshold to apply 'DOWN' nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"coin\":\"BTC\", \"amount\":1.234, \"rate\":3.234, \"market\":\"BTC/AUD\", \"total\": 10.234 } swap_now_order ( coin_to_sell , coin_to_buy , amount , rate = None , threshold = None , direction = 'BOTH' , nonce = None ) Place a swap order to swap {amount} of {coin_to_sell} for {coin_to_buy} Parameters: Name Type Description Default coin_to_sell str Coin short name, eg. BTC, ETH, LTC required coin_to_buy str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin_to_sell} to swap required rate float (optional) rate received from using Swap Now Quote or otherwise None threshold float (optional) 0 to 1000 - swap request will terminate if not within percentage threshold for current rate to vary from submitted rate, max precision for percentage is 8 decimal places None direction str (optional) UP, DOWN, or BOTH - direction the price has moved for the percentage threshold to apply 'BOTH' nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"coin\":\"BTC\", \"amount\":1.234, \"rate\":3.234, \"market\":\"BTC/ETH\", \"total\": 10.234 } cancel_buy_order ( order_id , nonce = None ) Cancel open Buy Order Parameters: Name Type Description Default order_id str ID of order to cancel required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\" } cancel_sell_order ( order_id , nonce = None ) Cancel open Sell Order Parameters: Name Type Description Default order_id str ID of order to cancel required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\" } get_coin_withdrawal_details ( coin , nonce = None ) Get list of networks that {coin} can be sent over Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"networks\": [ { \"network\": \"BNB\", \"paymentid\": \"no\", \"fee\": 0.001, \"minsend\": 0.00001, default: false}, { \"network\": \"BSC\", \"paymentid\": \"optional\", \"fee\": 0.002, \"minsend\": 0.00001, default: false}, { \"network\": \"ETH\", \"paymentid\": \"no\", \"fee\":0.003, \"minsend\": 0.00001, default: true}, ] } coin_withdrawal ( coin , amount , address , require_email_confirmation = 'NO' , network = None , payment_id = None , nonce = None ) Transfer {amount} of {coin} to {address} using {network} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float the amount (in coin currency) of coin you would like to transfer required address str the destination address for the coin amount required require_email_confirmation str (optional) if 'YES' an email confirmation will be sent and withdraw will not complete until confirmation link within email is clicked, values: 'YES', 'NO' 'NO' network str (optional) - network you would like to send using e.g. 'BNB', 'ETH' - None for 'default' network None payment_id str (optional) - the appropriate payment id/memo for the withdrawal where permitted None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\" }","title":"Full Access API"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2","text":"","title":"FullAccessAPIV2"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.__init__","text":"Wrapper for the CoinSpot FullAccess API V2 Parameters: Name Type Description Default api_key str your CoinSpot FullAccess API Key required api_secret str the Secret associated with the provided API key required","title":"__init__()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.status","text":"Return the status of the CoinSpot API. Parameters: Name Type Description Default nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict {'status': 'ok'}","title":"status()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.coin_deposit_address","text":"Return the deposit address for {coin} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { 'status':'ok', 'message':'ok', 'networks': [ {'name': 'BEP2', 'network': 'BNB', 'address': 'xxxxxxxxxxxxxxxxxxxxxxxxxxx', 'memo': '123456'}, {'name': 'ERC20', 'network': 'ETH', 'address': 'xxxxxxxxxxxxxxxxxxxxxxxxxxx', 'memo': ''} ] }","title":"coin_deposit_address()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.quote_buy_now","text":"Return a quote to buy {amount} of {coin}. Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount to buy of {coin} required amount_type str \"coin\" or \"aud\" - whether {amount} is coin amount or AUD amount required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict {'status': 'ok', 'message': 'ok', 'rate': 1234}","title":"quote_buy_now()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.quote_sell_now","text":"Return a quote to sell {amount} of {coins} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount to buy of {coin} required amount_type str \"coin\" or \"aud\" - whether {amount} is coin amount or AUD amount required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict {'status': 'ok', 'message': 'ok', 'rate': 1234}","title":"quote_sell_now()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.quote_swap_now","text":"Return a quote to swap {amount} of {coin_to_sell} for {coin_to_buy} Parameters: Name Type Description Default coin_to_sell str Coin short name, eg. BTC, ETH, LTC required coin_to_buy str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin_to_sell} to sell required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict {'status': 'ok', 'message': 'ok', 'rate': 1234}","title":"quote_swap_now()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.market_buy_order","text":"Place a market buy order for {amount} of {coin} at {rate} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin} to buy, max precision 8 decimal places required rate float Rate in market currency (e.g. AUD or USDT) you are willing to pay, max precision 8 decimal places required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' 'AUD' nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"coin\":\"BTC\", \"market\": \"BTC/AUD\", \"amount\":1.234 \"rate\":123.344 \"id\":\"12345678901234567890\" }","title":"market_buy_order()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.buy_now_order","text":"Place a buy now order for {amount} of {coin}. {amount} can be AUD or {coin}, determined by {amount_type} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin} to buy, max precision 8 decimal places required amount_type str \"coin\" or \"aud\" - whether {amount} is coin amount or AUD amount required rate float (optional) rate in AUD received from using quote_buy_now or otherwise None threshold float (optional) 0 to 1000 - buy request will terminate if not within percentage threshold for current rate to vary from submitted rate, max precision for percentage is 8 decimal places None direction str (optional) UP, DOWN, or BOTH - direction the price has moved for the percentage threshold to apply 'UP' nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"coin\":\"BTC\", \"amount\":1.234, \"market\":\"BTC/AUD\", \"total\": 10.234 }","title":"buy_now_order()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.market_sell_order","text":"Place a market sell order for {amount} of {coin} at {rate} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin} to sell, max precision 8 decimal places required rate float rate in AUD you are willing to sell for, max precision 8 decimal places required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' 'AUD' nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"coin\":\"BTC\", \"market\": \"BTC/AUD\", \"amount\":1.234, \"rate\":123.344, \"id\":\"12345678901234567890\" }","title":"market_sell_order()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.sell_now_order","text":"Place a sell now order for {amount} of {coin}. {amount} can be AUD or {coin}, determined by {amount_type} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin} to buy, max precision 8 decimal places required amount_type str \"coin\" or \"aud\" - whether {amount} is coin amount or AUD amount required rate float (optional) rate in AUD received from using Sell Now Quote or otherwise None threshold float (optional) 0 to 1000 - sell request will terminate if not within percentage threshold for current rate to vary from submitted rate, max precision for percentage is 8 decimal places None direction str (optional) UP, DOWN, or BOTH - direction the price has moved for the percentage threshold to apply 'DOWN' nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"coin\":\"BTC\", \"amount\":1.234, \"rate\":3.234, \"market\":\"BTC/AUD\", \"total\": 10.234 }","title":"sell_now_order()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.swap_now_order","text":"Place a swap order to swap {amount} of {coin_to_sell} for {coin_to_buy} Parameters: Name Type Description Default coin_to_sell str Coin short name, eg. BTC, ETH, LTC required coin_to_buy str Coin short name, eg. BTC, ETH, LTC required amount float Amount of {coin_to_sell} to swap required rate float (optional) rate received from using Swap Now Quote or otherwise None threshold float (optional) 0 to 1000 - swap request will terminate if not within percentage threshold for current rate to vary from submitted rate, max precision for percentage is 8 decimal places None direction str (optional) UP, DOWN, or BOTH - direction the price has moved for the percentage threshold to apply 'BOTH' nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"coin\":\"BTC\", \"amount\":1.234, \"rate\":3.234, \"market\":\"BTC/ETH\", \"total\": 10.234 }","title":"swap_now_order()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.cancel_buy_order","text":"Cancel open Buy Order Parameters: Name Type Description Default order_id str ID of order to cancel required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\" }","title":"cancel_buy_order()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.cancel_sell_order","text":"Cancel open Sell Order Parameters: Name Type Description Default order_id str ID of order to cancel required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\" }","title":"cancel_sell_order()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.get_coin_withdrawal_details","text":"Get list of networks that {coin} can be sent over Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"networks\": [ { \"network\": \"BNB\", \"paymentid\": \"no\", \"fee\": 0.001, \"minsend\": 0.00001, default: false}, { \"network\": \"BSC\", \"paymentid\": \"optional\", \"fee\": 0.002, \"minsend\": 0.00001, default: false}, { \"network\": \"ETH\", \"paymentid\": \"no\", \"fee\":0.003, \"minsend\": 0.00001, default: true}, ] }","title":"get_coin_withdrawal_details()"},{"location":"api/v2/full_access_api/#src.coinspot.FullAccessAPIV2.coin_withdrawal","text":"Transfer {amount} of {coin} to {address} using {network} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required amount float the amount (in coin currency) of coin you would like to transfer required address str the destination address for the coin amount required require_email_confirmation str (optional) if 'YES' an email confirmation will be sent and withdraw will not complete until confirmation link within email is clicked, values: 'YES', 'NO' 'NO' network str (optional) - network you would like to send using e.g. 'BNB', 'ETH' - None for 'default' network None payment_id str (optional) - the appropriate payment id/memo for the withdrawal where permitted None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\" }","title":"coin_withdrawal()"},{"location":"api/v2/general_concepts/","text":"Authentication To use parts of this library, you may need an API Token. You can obtain one by following the official Coinspot instructions at the top of this page Nonce The Coinspot documentation states that the nonce can be Any integer value which must always be greater than the previous requests nonce value. The default nonce used by this library is the output of int(time() * 1000) which should be fine for most use cases, however any function that requires a nonce does allow you to provide one manually using the nonce kwarg. Next steps Public API (No API Key required) Read Only API Full Access API","title":"General Concepts"},{"location":"api/v2/general_concepts/#authentication","text":"To use parts of this library, you may need an API Token. You can obtain one by following the official Coinspot instructions at the top of this page","title":"Authentication"},{"location":"api/v2/general_concepts/#nonce","text":"The Coinspot documentation states that the nonce can be Any integer value which must always be greater than the previous requests nonce value. The default nonce used by this library is the output of int(time() * 1000) which should be fine for most use cases, however any function that requires a nonce does allow you to provide one manually using the nonce kwarg.","title":"Nonce"},{"location":"api/v2/general_concepts/#next-steps","text":"Public API (No API Key required) Read Only API Full Access API","title":"Next steps"},{"location":"api/v2/public_api/","text":"src.coinspot.PublicAPIV2 latest ( coin = None , market_type = None ) Get latest coin prices Parameters: Name Type Description Default coin str (optional) Coin short name, eg. BTC, ETH, LTC None market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None Returns: Type Description dict coin=None market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"prices\":{\"btc\":{\"bid\":11111, \"ask\":222222, \"last\":1111.11}, ...}} coin=ABC market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"prices\":{\"bid\":11111, \"ask\":222222, \"last\":1111.11}} coin=ABC market_type=XYZ: {\"status\":\"ok\", \"message\":\"ok\", \"prices\":{\"bid\":11111, \"ask\":222222, \"last\":1111.11}} buy_price ( coin , market_type = None ) Get latest buy price for {coin} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None Returns: Type Description dict coin=ABC market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"rate\":11111, \"market\": \"ABC/AUD\"} coin=ABC market_type=XYZ: {\"status\":\"ok\", \"message\":\"ok\", \"rate\":11111, \"market\": \"ABC/XYZ\"} sell_price ( coin , market_type = None ) Get latest sell price for {coin} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None Returns: Type Description dict coin=ABC market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"rate\":11111, \"market\": \"ABC/AUD\"} coin=ABC market_type=XYZ: {\"status\":\"ok\", \"message\":\"ok\", \"rate\":11111, \"market\": \"ABC/XYZ\"} open_orders ( coin , market_type = None ) List open orders for {coin} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None Returns: Type Description dict coin=ABC market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[{\"amount\":0.1, \"rate\":111111, \"total\":111111, \"coin\":\"ABC\", \"market\":\"ABC/AUD\"}, ...], \"sellorders\":[{\"amount\":0.0001, \"rate\":1111111, \"total\":1.111, \"coin\":\"ABC\", \"market\":\"ABC/AUD\"}, ...]} coin=ABC market_type=XYZ: {\"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[{\"amount\":0.1, \"rate\":111111, \"total\":111111, \"coin\":\"ABC\", \"market\":\"ABC/XYZ\"}, ...], \"sellorders\":[{\"amount\":0.0001, \"rate\":1111111, \"total\":1.111, \"coin\":\"ABC\", \"market\":\"ABC/XYZ\"}, ...]} completed_orders ( coin , market_type = None ) List completed orders for {coin} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None Returns: Type Description dict coin=ABC market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[{\"amount\":0.1, \"rate\":111111, \"total\":111111, \"coin\":\"ABC\", \"solddate\":\"2020-05-21T13:22:45.000Z\", \"market\":\"ABC/AUD\"}, ...], \"sellorders\":[{\"amount\":0.0001, \"rate\":1111111, \"total\":1.111, \"coin\":\"ABC\", \"solddate\":\"2020-05-21T13:22:45.000Z\", \"market\":\"ABC/AUD\"}, ...]} coin=ABC market_type=XYZ: {\"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[{\"amount\":0.1, \"rate\":111111, \"total\":111111, \"coin\":\"ABC\", \"solddate\":\"2020-05-21T13:22:45.000Z\", \"market\":\"ABC/XYZ\"}, ...], \"sellorders\":[{\"amount\":0.0001, \"rate\":1111111, \"total\":1.111, \"coin\":\"ABC\", \"solddate\":\"2020-05-21T13:22:45.000Z\", \"market\":\"ABC/XYZ\"}, ...]}","title":"Public API"},{"location":"api/v2/public_api/#src.coinspot.PublicAPIV2","text":"","title":"PublicAPIV2"},{"location":"api/v2/public_api/#src.coinspot.PublicAPIV2.latest","text":"Get latest coin prices Parameters: Name Type Description Default coin str (optional) Coin short name, eg. BTC, ETH, LTC None market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None Returns: Type Description dict coin=None market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"prices\":{\"btc\":{\"bid\":11111, \"ask\":222222, \"last\":1111.11}, ...}} coin=ABC market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"prices\":{\"bid\":11111, \"ask\":222222, \"last\":1111.11}} coin=ABC market_type=XYZ: {\"status\":\"ok\", \"message\":\"ok\", \"prices\":{\"bid\":11111, \"ask\":222222, \"last\":1111.11}}","title":"latest()"},{"location":"api/v2/public_api/#src.coinspot.PublicAPIV2.buy_price","text":"Get latest buy price for {coin} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None Returns: Type Description dict coin=ABC market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"rate\":11111, \"market\": \"ABC/AUD\"} coin=ABC market_type=XYZ: {\"status\":\"ok\", \"message\":\"ok\", \"rate\":11111, \"market\": \"ABC/XYZ\"}","title":"buy_price()"},{"location":"api/v2/public_api/#src.coinspot.PublicAPIV2.sell_price","text":"Get latest sell price for {coin} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None Returns: Type Description dict coin=ABC market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"rate\":11111, \"market\": \"ABC/AUD\"} coin=ABC market_type=XYZ: {\"status\":\"ok\", \"message\":\"ok\", \"rate\":11111, \"market\": \"ABC/XYZ\"}","title":"sell_price()"},{"location":"api/v2/public_api/#src.coinspot.PublicAPIV2.open_orders","text":"List open orders for {coin} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None Returns: Type Description dict coin=ABC market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[{\"amount\":0.1, \"rate\":111111, \"total\":111111, \"coin\":\"ABC\", \"market\":\"ABC/AUD\"}, ...], \"sellorders\":[{\"amount\":0.0001, \"rate\":1111111, \"total\":1.111, \"coin\":\"ABC\", \"market\":\"ABC/AUD\"}, ...]} coin=ABC market_type=XYZ: {\"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[{\"amount\":0.1, \"rate\":111111, \"total\":111111, \"coin\":\"ABC\", \"market\":\"ABC/XYZ\"}, ...], \"sellorders\":[{\"amount\":0.0001, \"rate\":1111111, \"total\":1.111, \"coin\":\"ABC\", \"market\":\"ABC/XYZ\"}, ...]}","title":"open_orders()"},{"location":"api/v2/public_api/#src.coinspot.PublicAPIV2.completed_orders","text":"List completed orders for {coin} Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None Returns: Type Description dict coin=ABC market_type=None: {\"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[{\"amount\":0.1, \"rate\":111111, \"total\":111111, \"coin\":\"ABC\", \"solddate\":\"2020-05-21T13:22:45.000Z\", \"market\":\"ABC/AUD\"}, ...], \"sellorders\":[{\"amount\":0.0001, \"rate\":1111111, \"total\":1.111, \"coin\":\"ABC\", \"solddate\":\"2020-05-21T13:22:45.000Z\", \"market\":\"ABC/AUD\"}, ...]} coin=ABC market_type=XYZ: {\"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[{\"amount\":0.1, \"rate\":111111, \"total\":111111, \"coin\":\"ABC\", \"solddate\":\"2020-05-21T13:22:45.000Z\", \"market\":\"ABC/XYZ\"}, ...], \"sellorders\":[{\"amount\":0.0001, \"rate\":1111111, \"total\":1.111, \"coin\":\"ABC\", \"solddate\":\"2020-05-21T13:22:45.000Z\", \"market\":\"ABC/XYZ\"}, ...]}","title":"completed_orders()"},{"location":"api/v2/read_only_api/","text":"src.coinspot.ReadOnlyAPIV2 __init__ ( api_key , api_secret ) Wrapper for the CoinSpot ReadOnly API V2 Parameters: Name Type Description Default api_key str is your CoinSpot ReadOnly API Key required api_secret str is the Secret associated with the provided API key required status ( nonce = None ) Return the status of the CoinSpot API. Parameters: Name Type Description Default nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict {\"status\":\"ok\"} public_open_market_orders ( coin , market_type = None , nonce = None ) Return a list of the top 20 public open buy and sell market orders Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"amount\":0.0001, \"rate\":111111, \"total\":0.1, \"coin\":\"BTC\", \"market\": \"BTC/AUD\" }, { \"amount\":0.001, \"rate\":11111111, \"total\":0.01, \"coin\":\"BTC\", \"market\": \"BTC/AUD\" } ], \"sellorders\":[ { \"amount\":0.0001, \"rate\":111111, \"total\":1, \"coin\":\"BTC\", \"market\": \"BTC/AUD\" }, { \"amount\":0.0001855, \"rate\":11111, \"total\":2, \"coin\":\"BTC\", \"market\": \"BTC/AUD\" } ] } public_completed_market_orders ( coin , market_type = None , start_date = None , end_date = None , limit = 200 , nonce = None ) Return a list of public completed buy and sell market orders Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None limit int (optional) max 500 records 200 nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"amount\":0.0001, \"rate\":111111, \"total\":0.1, \"coin\":\"BTC\", \"market\": \"BTC/AUD\", \"solddate\":\"2020-05-21T13:22:45.000Z\" }, { \"amount\":0.001, \"rate\":11111111, \"total\":0.01, \"coin\":\"BTC\", \"market\": \"BTC/USDT\", \"solddate\":\"2020-05-21T13:22:45.000Z\" } ], \"sellorders\":[ { \"amount\":0.0001, \"rate\":111111, \"total\":1, \"coin\":\"BTC\", \"market\": \"BTC/AUD\", \"solddate\":\"2020-05-21T13:22:45.000Z\" }, { \"amount\":0.0001855, \"rate\":11111, \"total\":2, \"coin\":\"BTC\", \"market\": \"BTC/USDT\", \"solddate\":\"2020-05-21T13:22:45.000Z\" } ] } wallet_balance ( coin = None , nonce = None ) Return the balance of the specified wallet, or all non-empty wallets Parameters: Name Type Description Default coin str Optional coin short name, eg. BTC, ETH, LTC. If None, returns a list of balances for all of your wallets None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"balances\":[ { \"AUD\":{ \"balance\":1000.11, \"audbalance\":1000.11, \"rate\":1 } }, { \"BTC\":{ \"balance\":1.1111111, \"audbalance\":2222.22, \"rate\":111111.11 } }, { \"LTC\":{ \"balance\":111.111111, \"audbalance\":22222.22, \"rate\":11.1111 } }] } open_market_orders ( coin = None , market_type = None , nonce = None ) Return a list of your open market orders Parameters: Name Type Description Default coin str (optional) coin short name, eg. BTC, ETH, LTC. if None, returns open market orders for all coins None market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' if None, returns open market orders for all markets None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\":\"STRAT\", \"market\":\"STRAT/AUD\", \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"rate\":45.11111, \"total\":444444 }, { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\":\"STRAT\", \"market\":\"STRAT/USDT\", \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"rate\":45.11111, \"total\":444444 }] \"sellorders\":[ { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\":\"STRAT\", \"market\":\"STRAT/AUD\", \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"rate\":45.11111, \"total\":444444 }, { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\":\"STRAT\", \"market\":\"STRAT/USDT\", \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"rate\":45.11111, \"total\":444444 }} ] } open_limit_orders ( coin = None , nonce = None ) Return a list of your open limit orders Parameters: Name Type Description Default coin str (optional) coin short name, eg. BTC, ETH, LTC. if None, returns open limit orders for all coins None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\": \"STRAT\", \"market\":\"STRAT/AUD\", \"rate\": 111.111 \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"type\": \"buy stop\" }, { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\": \"STRAT\", \"market\":\"STRAT/AUD\", \"rate\": 111.111 \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"type\": \"buy limit\" }] \"sellorders\":[ { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\": \"STRAT\", \"market\":\"STRAT/AUD\", \"rate\": 111.111 \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"type\": \"stop loss\" }, { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\": \"STRAT\", \"market\":\"STRAT/AUD\", \"rate\": 111.111 \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"type\": \"take profit\" }} ] } order_history ( coin = None , market_type = None , start_date = None , end_date = None , limit = 200 , nonce = None ) Return a list of your past orders Parameters: Name Type Description Default coin str (optional) coin short name, eg. BTC, ETH, LTC. if None, returns past orders for all coins None market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' if None, returns past orders for all markets None start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None limit int (optional) max 500 records 200 nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"coin\":\"STRAT\", \"type\":\"market\", \"market\":\"STRAT/AUD\", \"rate\":1222.33, \"amount\":111.1111, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":45.11111, \"audGst\":40.11111, \"audtotal\":444444 }, { \"coin\":\"STRAT\", \"type\":\"instant\", \"otc\":false, \"market\":\"OMG/AUD\", \"rate\":1222.33, \"amount\":333.33333, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":44.444444, \"audGst\":4.444444, \"audtotal\":5000 }] \"sellorders\":[ { \"coin\":\"STRAT\", \"type\":\"market\", \"market\":\"STRAT/AUD\", \"rate\":1222.33, \"amount\":111.1111, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":45.11111, \"audGst\":40.11111, \"audtotal\":444444 }, { \"coin\":\"STRAT\", \"type\":\"instant\", \"otc\":false, \"market\":\"OMG/AUD\", \"rate\":1222.33, \"amount\":333.33333, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":44.444444, \"audGst\":4.444444, \"audtotal\":5000 }] ] } market_order_history ( coin = None , market_type = None , start_date = None , end_date = None , limit = 200 , nonce = None ) Return a list of your past market orders Parameters: Name Type Description Default coin str (optional) coin short name, eg. BTC, ETH, LTC. if None, returns past market orders for all coins None market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' if None, returns open market orders for all markets None start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None limit int (optional) max 500 records 200 nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"coin\":\"STRAT\", \"market\":\"STRAT/AUD\", \"rate\":1222.33, \"amount\":111.1111, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":45.11111, \"audGst\":40.11111, \"audtotal\":444444 }, { \"coin\":\"STRAT\", \"market\":\"OMG/AUD\", \"rate\":1222.33, \"amount\":333.33333, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":44.444444, \"audGst\":4.444444, \"audtotal\":5000 }] \"sellorders\":[ { \"coin\":\"STRAT\", \"market\":\"STRAT/AUD\", \"rate\":1222.33, \"amount\":111.1111, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":45.11111, \"audGst\":40.11111, \"audtotal\":444444 }, { \"coin\":\"STRAT\", \"market\":\"OMG/AUD\", \"rate\":1222.33, \"amount\":333.33333, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":44.444444, \"audGst\":4.444444, \"audtotal\":5000 }] ] } send_receive_history ( start_date = None , end_date = None , nonce = None ) Return a list of your past send/receive transactions Parameters: Name Type Description Default start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"sendtransactions\":[ { \"timestamp\":\"2020-05-21T13:22:45.000Z\", \"amount\":1.111, \"coin\":\"ETH\", \"address\":\"12345678901234567890\", \"aud\": 0.123 }, { \"timestamp\":\"2020-05-21T13:22:45.000Z\", \"amount\":1111.11111, \"coin\":\"RDD\", \"address\":\"12345678901234567890\", \"aud\": 0.123 } ], \"receivetransactions\":[ { \"timestamp\":\"2020-05-21T13:22:45.000Z\", \"amount\":1.111, \"coin\":\"ETH\", \"address\":\"12345678901234567890\", \"aud\": 0.123 }, { \"timestamp\":\"2020-05-21T13:22:45.000Z\", \"amount\":1111.11111, \"coin\":\"RDD\", \"address\":\"12345678901234567890\", \"aud\": 0.123 } ] } deposit_history ( start_date = None , end_date = None , nonce = None ) Return a list of your past deposits Parameters: Name Type Description Default start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"deposits\":[ { \"amount\":1111, \"created\":\"\"2020-05-21T13:22:45.000Z\", \"status\":\"completed\", \"type\":\"POLi\", \"reference\":\"12345678901234567890\" }, { \"amount\":2000, \"created\":\"2020-05-21T13:22:45.000Z\", \"status\":\"completed\", \"type\":\"POLi\", \"reference\":\"12345678901234567890\" } ] } withdrawal_history ( start_date = None , end_date = None , nonce = None ) Return a list of your past withdrawals Parameters: Name Type Description Default start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"withdrawals\":[ { \"amount\":10, \"created\":\"2020-05-21T13:22:45.000Z\", \"status\":\"created\" }, { \"amount\":20, \"created\":\"2020-05-21T13:22:45.000Z\", \"status\":\"created\" } ] } affiliate_payment_history ( nonce = None ) Return a list of affiliate payments you have received in the past Parameters: Name Type Description Default nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"payments\":[ { \"amount\":111.1111, \"month\":\"2020-05-21T13:22:45.000Z\" }, { \"amount\":111.1111, \"month\":\"2020-04-21T13:22:45.000Z\" } ] } referral_payment_history ( nonce = None ) Return a list of referral payments you have received in the past Parameters: Name Type Description Default nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"payments\":[ { \"amount\":111.1111, \"coin\":\"BTC\", \"audamount\":10, \"timestamp\":\"2020-04-21T13:22:45.000Z\" }, { \"amount\":222.22222, \"coin\":\"BTC\", \"audamount\":10, \"timestamp\":\"2020-05-21T13:22:45.000Z\" } ] }","title":"Read Only API"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2","text":"","title":"ReadOnlyAPIV2"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.__init__","text":"Wrapper for the CoinSpot ReadOnly API V2 Parameters: Name Type Description Default api_key str is your CoinSpot ReadOnly API Key required api_secret str is the Secret associated with the provided API key required","title":"__init__()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.status","text":"Return the status of the CoinSpot API. Parameters: Name Type Description Default nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict {\"status\":\"ok\"}","title":"status()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.public_open_market_orders","text":"Return a list of the top 20 public open buy and sell market orders Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"amount\":0.0001, \"rate\":111111, \"total\":0.1, \"coin\":\"BTC\", \"market\": \"BTC/AUD\" }, { \"amount\":0.001, \"rate\":11111111, \"total\":0.01, \"coin\":\"BTC\", \"market\": \"BTC/AUD\" } ], \"sellorders\":[ { \"amount\":0.0001, \"rate\":111111, \"total\":1, \"coin\":\"BTC\", \"market\": \"BTC/AUD\" }, { \"amount\":0.0001855, \"rate\":11111, \"total\":2, \"coin\":\"BTC\", \"market\": \"BTC/AUD\" } ] }","title":"public_open_market_orders()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.public_completed_market_orders","text":"Return a list of public completed buy and sell market orders Parameters: Name Type Description Default coin str Coin short name, eg. BTC, ETH, LTC required market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' None start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None limit int (optional) max 500 records 200 nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"amount\":0.0001, \"rate\":111111, \"total\":0.1, \"coin\":\"BTC\", \"market\": \"BTC/AUD\", \"solddate\":\"2020-05-21T13:22:45.000Z\" }, { \"amount\":0.001, \"rate\":11111111, \"total\":0.01, \"coin\":\"BTC\", \"market\": \"BTC/USDT\", \"solddate\":\"2020-05-21T13:22:45.000Z\" } ], \"sellorders\":[ { \"amount\":0.0001, \"rate\":111111, \"total\":1, \"coin\":\"BTC\", \"market\": \"BTC/AUD\", \"solddate\":\"2020-05-21T13:22:45.000Z\" }, { \"amount\":0.0001855, \"rate\":11111, \"total\":2, \"coin\":\"BTC\", \"market\": \"BTC/USDT\", \"solddate\":\"2020-05-21T13:22:45.000Z\" } ] }","title":"public_completed_market_orders()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.wallet_balance","text":"Return the balance of the specified wallet, or all non-empty wallets Parameters: Name Type Description Default coin str Optional coin short name, eg. BTC, ETH, LTC. If None, returns a list of balances for all of your wallets None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"balances\":[ { \"AUD\":{ \"balance\":1000.11, \"audbalance\":1000.11, \"rate\":1 } }, { \"BTC\":{ \"balance\":1.1111111, \"audbalance\":2222.22, \"rate\":111111.11 } }, { \"LTC\":{ \"balance\":111.111111, \"audbalance\":22222.22, \"rate\":11.1111 } }] }","title":"wallet_balance()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.open_market_orders","text":"Return a list of your open market orders Parameters: Name Type Description Default coin str (optional) coin short name, eg. BTC, ETH, LTC. if None, returns open market orders for all coins None market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' if None, returns open market orders for all markets None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\":\"STRAT\", \"market\":\"STRAT/AUD\", \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"rate\":45.11111, \"total\":444444 }, { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\":\"STRAT\", \"market\":\"STRAT/USDT\", \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"rate\":45.11111, \"total\":444444 }] \"sellorders\":[ { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\":\"STRAT\", \"market\":\"STRAT/AUD\", \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"rate\":45.11111, \"total\":444444 }, { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\":\"STRAT\", \"market\":\"STRAT/USDT\", \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"rate\":45.11111, \"total\":444444 }} ] }","title":"open_market_orders()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.open_limit_orders","text":"Return a list of your open limit orders Parameters: Name Type Description Default coin str (optional) coin short name, eg. BTC, ETH, LTC. if None, returns open limit orders for all coins None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\": \"STRAT\", \"market\":\"STRAT/AUD\", \"rate\": 111.111 \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"type\": \"buy stop\" }, { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\": \"STRAT\", \"market\":\"STRAT/AUD\", \"rate\": 111.111 \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"type\": \"buy limit\" }] \"sellorders\":[ { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\": \"STRAT\", \"market\":\"STRAT/AUD\", \"rate\": 111.111 \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"type\": \"stop loss\" }, { \"id\": \"1f1f1f1f1d1d1d1d1d1d1d1d\", \"coin\": \"STRAT\", \"market\":\"STRAT/AUD\", \"rate\": 111.111 \"amount\":111.1111, \"created\":\"2020-05-21T13:22:45.000Z\", \"type\": \"take profit\" }} ] }","title":"open_limit_orders()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.order_history","text":"Return a list of your past orders Parameters: Name Type Description Default coin str (optional) coin short name, eg. BTC, ETH, LTC. if None, returns past orders for all coins None market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' if None, returns past orders for all markets None start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None limit int (optional) max 500 records 200 nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"coin\":\"STRAT\", \"type\":\"market\", \"market\":\"STRAT/AUD\", \"rate\":1222.33, \"amount\":111.1111, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":45.11111, \"audGst\":40.11111, \"audtotal\":444444 }, { \"coin\":\"STRAT\", \"type\":\"instant\", \"otc\":false, \"market\":\"OMG/AUD\", \"rate\":1222.33, \"amount\":333.33333, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":44.444444, \"audGst\":4.444444, \"audtotal\":5000 }] \"sellorders\":[ { \"coin\":\"STRAT\", \"type\":\"market\", \"market\":\"STRAT/AUD\", \"rate\":1222.33, \"amount\":111.1111, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":45.11111, \"audGst\":40.11111, \"audtotal\":444444 }, { \"coin\":\"STRAT\", \"type\":\"instant\", \"otc\":false, \"market\":\"OMG/AUD\", \"rate\":1222.33, \"amount\":333.33333, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":44.444444, \"audGst\":4.444444, \"audtotal\":5000 }] ] }","title":"order_history()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.market_order_history","text":"Return a list of your past market orders Parameters: Name Type Description Default coin str (optional) coin short name, eg. BTC, ETH, LTC. if None, returns past market orders for all coins None market_type str (optional, available markets only, default 'AUD') market coin short name, example values 'AUD', 'USDT' if None, returns open market orders for all markets None start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None limit int (optional) max 500 records 200 nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"buyorders\":[ { \"coin\":\"STRAT\", \"market\":\"STRAT/AUD\", \"rate\":1222.33, \"amount\":111.1111, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":45.11111, \"audGst\":40.11111, \"audtotal\":444444 }, { \"coin\":\"STRAT\", \"market\":\"OMG/AUD\", \"rate\":1222.33, \"amount\":333.33333, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":44.444444, \"audGst\":4.444444, \"audtotal\":5000 }] \"sellorders\":[ { \"coin\":\"STRAT\", \"market\":\"STRAT/AUD\", \"rate\":1222.33, \"amount\":111.1111, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":45.11111, \"audGst\":40.11111, \"audtotal\":444444 }, { \"coin\":\"STRAT\", \"market\":\"OMG/AUD\", \"rate\":1222.33, \"amount\":333.33333, \"total\":222.2222, \"solddate\":\"2020-05-21T13:22:45.000Z\", \"audfeeExGst\":44.444444, \"audGst\":4.444444, \"audtotal\":5000 }] ] }","title":"market_order_history()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.send_receive_history","text":"Return a list of your past send/receive transactions Parameters: Name Type Description Default start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"sendtransactions\":[ { \"timestamp\":\"2020-05-21T13:22:45.000Z\", \"amount\":1.111, \"coin\":\"ETH\", \"address\":\"12345678901234567890\", \"aud\": 0.123 }, { \"timestamp\":\"2020-05-21T13:22:45.000Z\", \"amount\":1111.11111, \"coin\":\"RDD\", \"address\":\"12345678901234567890\", \"aud\": 0.123 } ], \"receivetransactions\":[ { \"timestamp\":\"2020-05-21T13:22:45.000Z\", \"amount\":1.111, \"coin\":\"ETH\", \"address\":\"12345678901234567890\", \"aud\": 0.123 }, { \"timestamp\":\"2020-05-21T13:22:45.000Z\", \"amount\":1111.11111, \"coin\":\"RDD\", \"address\":\"12345678901234567890\", \"aud\": 0.123 } ] }","title":"send_receive_history()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.deposit_history","text":"Return a list of your past deposits Parameters: Name Type Description Default start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"deposits\":[ { \"amount\":1111, \"created\":\"\"2020-05-21T13:22:45.000Z\", \"status\":\"completed\", \"type\":\"POLi\", \"reference\":\"12345678901234567890\" }, { \"amount\":2000, \"created\":\"2020-05-21T13:22:45.000Z\", \"status\":\"completed\", \"type\":\"POLi\", \"reference\":\"12345678901234567890\" } ] }","title":"deposit_history()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.withdrawal_history","text":"Return a list of your past withdrawals Parameters: Name Type Description Default start_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None end_date str (optional) note: date is UTC date. format 'YYYY-MM-DD' None nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"withdrawals\":[ { \"amount\":10, \"created\":\"2020-05-21T13:22:45.000Z\", \"status\":\"created\" }, { \"amount\":20, \"created\":\"2020-05-21T13:22:45.000Z\", \"status\":\"created\" } ] }","title":"withdrawal_history()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.affiliate_payment_history","text":"Return a list of affiliate payments you have received in the past Parameters: Name Type Description Default nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"payments\":[ { \"amount\":111.1111, \"month\":\"2020-05-21T13:22:45.000Z\" }, { \"amount\":111.1111, \"month\":\"2020-04-21T13:22:45.000Z\" } ] }","title":"affiliate_payment_history()"},{"location":"api/v2/read_only_api/#src.coinspot.ReadOnlyAPIV2.referral_payment_history","text":"Return a list of referral payments you have received in the past Parameters: Name Type Description Default nonce int (optional) Nonce. See the docs for more detail None Returns: Type Description dict { \"status\":\"ok\", \"message\":\"ok\", \"payments\":[ { \"amount\":111.1111, \"coin\":\"BTC\", \"audamount\":10, \"timestamp\":\"2020-04-21T13:22:45.000Z\" }, { \"amount\":222.22222, \"coin\":\"BTC\", \"audamount\":10, \"timestamp\":\"2020-05-21T13:22:45.000Z\" } ] }","title":"referral_payment_history()"}]}